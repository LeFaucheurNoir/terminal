#tout est important
#pour l'utiliser il vous faut une version de python sur votre machine et un logiciel pour coder
#il vous suffiras de copier le code et de le coler dans le logiciel de codage avec le language python
import time
from tkinter import *

#pour les liens
site = "https://portalia-1.jimdosite.com/"
server_discord = "https://discord.io/Portaliafr"

#les personnes
player1 = "pseudo1"
player2 = "pseudo2"

#pour les mots de passes
good_password1 = ["mot de passe1"]
good_password2 = ["mot de passe2"]
exit_password = ["exit","quit"]
password_ok = False
password_ok2 = True
error_password = 10
admin_password = False #en création
admin_vrai = False #en création
admin_faux = True #en création
admin = 0
password_ok3 = True
good_password3 = ["A69b74C12"]

#pour le terminal
terminal_name = "Portalia"
terminal_launched = True


#pour les commandes
user_command = ""


#le exit
def exitall():
    exit()

#le message de bienvenue
print("\
  ")
time.sleep(0.5)
print("/===========================================\\")
time.sleep(0.5)
print("|                                           |")
time.sleep(0.5)
print("|                Bienvenue !!!              |")
time.sleep(0.5)
print("|                                           |")
time.sleep(0.5)
print("\\===========================================/")



 
#la boucle du mot de passe
while not password_ok :
  password = input("Mot de passe : ")
  time.sleep(0.5)
  if password in good_password2:
    print("Accépté.")
    print("Bienvenue {}.".format(player2))
    password_ok = True
  elif password in good_password1:
       print("Accépté.")
       print("Bienvenue {}.".format(player1))
       password_ok = True
  elif password in exit_password :
     window1 = Tk()
     frame = Frame(window1, bg='blue', bd=2, relief=SUNKEN)

     window1.title("EXIT")
     window1.geometry("500x200")
     window1.minsize(480, 360)

     window1.config(background='')
     Label_title = Label (window1, text="Voulez-vous quitter ?", font=("Courrier", 40), bg='white', fg='black')
     Label_title.pack(side=TOP, expand=YES)

     accept_button = Button(window1, text="Oui", font=("Courrier", 20), bg='white', fg='Black',command=exitall)
     accept_button.pack(side=LEFT,pady=25,expand=YES)

     refuse_button = Button(window1, text="Non", font=("Courrier", 20), bg='white', fg='Black',command=window1.destroy)
     refuse_button.pack(side=RIGHT,pady=25,expand=YES)

     window1.mainloop()
  else:
    print("Refusé !!!")
    error_password = error_password - 1
    
  if error_password == 0 :
    print("Vous avez raté trop de fois votre mot de passe pour recommencer relancez le terminal.")
    exit()
   
#fais une fenettre qui demande si oui ou non vous voulez quitter le terminal
def task_exit():
 window1 = Tk()
 frame = Frame(window1, bg='blue', bd=2, relief=SUNKEN)

 window1.title("EXIT")
 window1.geometry("500x200")
 window1.minsize(480, 360)

 window1.config(background='')
 Label_title = Label (window1, text="Voulez-vous quitter ?", font=("Courrier", 40), bg='white', fg='black')
 Label_title.pack(side=TOP, expand=YES)

 accept_button = Button(window1, text="Oui", font=("Courrier", 20), bg='white', fg='Black',command=exitall)
 accept_button.pack(side=LEFT,pady=25,expand=YES)

 refuse_button = Button(window1, text="Non", font=("Courrier", 20), bg='white', fg='Black',command=window1.destroy)
 refuse_button.pack(side=RIGHT,pady=25,expand=YES)

 window1.mainloop()


#le help
def task_help():
     print("\
       ")
     print("/====================================================================\\")
     time.sleep(0.5)
     print("|               LISTE DES COMMANDES DISPONIBLES                      |")
     time.sleep(0.5)
     print("|help    : affiche les commandes disponibles                         |") 
     time.sleep(0.5)
     print("|?       : affiche les commandes disponibles                         |")
     time.sleep(0.5)
     print("|quit    : affiche une fenettre d'exit                               |")
     time.sleep(0.5)
     print("|exit    : affiche une fenettre d'exit                               |")
     time.sleep(0.5)
     print("|site    : affiche le site et le discord                             |")
     time.sleep(0.5)
     print("|name    : choisis un nouveau nom pour le terminal                   |")
     time.sleep(0.5)
     print("|lock    : verrouille le terminal code a refaire                     |")
     time.sleep(0.5)
     print("|update  : affiche les mises a jours                                 |")
     time.sleep(0.5)
     print("|pseudo1 : change le pseudo de player1 à refaire à chaque redemarrage|")
     time.sleep(0.5)
     print("|pseudo2 : change le pseudo de player2 à refaire à chaque redemarrage|")
     time.sleep(0.5)
     print("|dessin  : dessinne un petit personnage sympatique                   |")
     time.sleep(0.5)
     print("\\====================================================================/")



#le name qui ne marche pas encore
def task_name():
  global terminal_name
  terminal_name = input("Remplacer {} par : ".format(terminal_name))


#le site et le serveur
def task_site():
  print("\
    ")
  print("Le site du créateur est: {}".format(site))
  time.sleep(0.5)
  print("le site ne sert pas que pour le code il sert aussi pour minecraft et roblox")
  time.sleep(0.5)
  print("n'ésite pas a rejoindre le serveur minecraft")
  time.sleep(0.5)
  print("et le serveur discord est : {}".format(server_discord))


#pour une commande inconue
def task_unknown():
    print("Commande inconnue.")


#le lock pour refaire le mot de passe
def task_lock():
  password_ok2 = False
  while not password_ok2 :
    password2 = input("Mot de passe : ")
    time.sleep(0.5)
    if password2 in good_password1 :
      print("Accépté : {}.".format(player1))
      password_ok2 = True
    elif password2 in good_password2 :
      print("Accépté : {}.".format(player2))
      password_ok2 = True
    elif password in exit_password :
      print("Tu quittes le termnial.")
      exit()
    else :
      print("Refusé")


#les mises à jours
def task_update() :
  print("\
    ")
  print("                              Mises a jours")
  time.sleep(0.5)
  print("\
     ")
  print("Ajouts d'une fenettre pour qui demande si oui ou non vous voulez quitter le terminal.")



#pour changer le pseudo1
def task_pseudo1():
  global player1
  player1 = input("Choisis un nouveau pseudo pour player1 : ")


#pour changer le pseudo2
def task_pseudo2():
  global player2
  player2 = input("Choisis un nouveau pseudo pour player2 : ")


#le dessin du personnage
def task_dessin() :
 print("\
")
 print("      ___")
 time.sleep(0.5)
 print("     /I I\\")
 time.sleep(0.5)
 print("    |  d  | ")
 time.sleep(0.5)
 print("     \_=_/")
 time.sleep(0.5)
 print("     _| |_")   
 time.sleep(0.5)
 print("    | | | |")
 time.sleep(0.5)
 print("    | | | |")
 time.sleep(0.5)
 print("      | |")
 time.sleep(0.5)
 print("     _| |_")


def task_admin_password(): #en création
     password_ok3 = False
     while not password_ok3 :
      password = input("Mot de passe : ")
      time.sleep(0.5)
      if password in good_password3 :
        print("Accépté en tant que : Administrateur.")
        password_ok3 = True
        admin = 1
        admin_vrai == True
      elif password in exit_password :
        print("Tu n'ais pas admin.")
        password_ok3 = True
      else :
       print("Refusé")




#le help pour la machine
dico_task_no_admin = {
     'help'    : task_help,
     '?'       : task_help,
     'quit'    : task_exit,
     'exit'    : task_exit,
     'site'    : task_site,
     'lock'    : task_lock,
     'update'  : task_update,
     'pseudo1' : task_pseudo1,
     'pseudo2' : task_pseudo2,
     'pseudo 1': task_pseudo1,
     'pseudo 2': task_pseudo2,
     'dessin'  : task_dessin,
     'admin'   : task_admin_password,
     'name'    : task_name,
     }


dico_task_admin = {
  'name' : task_name
}

if admin == 1 :
 while admin_vrai == True :
   dico_task_admin.get(user_command, task_unknown)()
   dico_task_no_admin.get(user_command, task_unknown)()



#pour le terminal
while terminal_launched :
  user_command = input(f"[{terminal_name}]> ")
  dico_task_no_admin.get(user_command, task_unknown)()

#la suite bientôt
