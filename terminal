#tout est important
#pour l'utiliser il vous faut une version de python sur votre machine et un logiciel pour coder
#il vous suffiras de copier le code et de le coler dans le logiciel de codage avec le language python
import time
from tkinter import *
import webbrowser

#pour les liens
site = "https://portalia-1.jimdosite.com/"
server_discord = "https://discord.io/Portaliafr"

#les personnes
player1 = "pseudo1"
player2 = "pseudo2"

#pour les mots de passes
good_password1 = ["mot de passe1","1"]
good_password2 = ["mot de passe2","2"]
good_password3 = ["A69b74C12"]
good_password4 = ["rep"]
good_passwords1 = good_password1[0]
good_passwords2 = good_password2[0]
good_passwords3 = good_password3[0]
exit_password = ["exit","quit"]
crash_password = ["crash","stop"]
password_ok = False
password_ok2 = True
error_password = 10
admin_password = False #en création
admin_vrai = False #en création
admin_faux = True #en création
admin = "non"
password_ok3 = True


#pour le terminal
terminal_name = "Portalia"
terminal_launched = True


#pour les commandes
user_command = ""
user_admin_command = ""

def siteadresse():
  webbrowser.open_new_tab("https://portalia-1.jimdosite.com")


def discordadresse():
  webbrowser.open_new_tab("https://discord.io/Portaliafr")
  

def site():
     windowsite = Tk()
     frame = Frame(windowsite, bg='blue', bd=2, relief=SUNKEN)

     windowsite.title("Site")
     windowsite.geometry("1700x1000")
     windowsite.minsize(480, 360)

     windowsite.config(background='')
     Label_title = Label (windowsite, text="Voulez-vous ouvrir la page du site ?", font=("Courrier", 40), bg='white', fg='black')
     Label_title.pack(side=TOP, expand=YES)

     accept_button = Button(windowsite, text="Oui", font=("Courrier", 20), bg='white', fg='Black',command=siteadresse)
     accept_button.pack(side=LEFT,pady=25,expand=YES)

     refuse_button = Button(windowsite, text="Non", font=("Courrier", 20), bg='white', fg='Black',command=windowsite.destroy)
     refuse_button.pack(side=RIGHT,pady=25,expand=YES)

     windowsite.mainloop()


def discord():
     windowdiscord = Tk()
     frame = Frame(windowdiscord, bg='blue', bd=2, relief=SUNKEN)

     windowdiscord.title("Discord")
     windowdiscord.geometry("1700x1000")
     windowdiscord.minsize(480, 360)

     windowdiscord.config(background='')
     Label_title = Label (windowdiscord, text="Voulez-vous rejoindre le discord ?", font=("Courrier", 40), bg='white', fg='black')
     Label_title.pack(side=TOP, expand=YES)

     accept_button = Button(windowdiscord, text="Oui", font=("Courrier", 20), bg='white', fg='Black',command=discordadresse)
     accept_button.pack(side=LEFT,pady=25,expand=YES)

     refuse_button = Button(windowdiscord, text="Non", font=("Courrier", 20), bg='white', fg='Black',command=windowdiscord.destroy)
     refuse_button.pack(side=RIGHT,pady=25,expand=YES)

     windowdiscord.mainloop()

#le exit
def exitall():
    exit()

#le message de bienvenue
print("\
  ")
time.sleep(0.5)
print("/===========================================\\")
time.sleep(0.5)
print("|                                           |")
time.sleep(0.5)
print("|                Bienvenue                  |")
time.sleep(0.5)
print("|                                           |")
time.sleep(0.5)
print("\\===========================================/")



 
#la boucle du mot de passe
while not password_ok :
  password = input("Mot de passe : ")
  time.sleep(0.5)
  if password in good_password2:
    print("Accépté.")
    print("Bienvenue {}.".format(player2))
    password_ok = True
  elif password in good_password1:
       print("Accépté.")
       print("Bienvenue {}.".format(player1))
       password_ok = True
  elif password in good_password4 :
      print("\
      ")
      print("1.{}".format(good_passwords1))
      time.sleep(0.5)
      print("2.{}".format(good_passwords2))
      time.sleep(0.5)
      print("3.(admin) {}".format(good_passwords3))
      time.sleep(0.5)
      print("Si vous mettez le numéro du mot de passe cela marcheras également sauf le mot de passe pour le mode admin.")
      print("\
      ")
  elif password in exit_password :
     window1 = Tk()
     frame = Frame(window1, bg='blue', bd=2, relief=SUNKEN)

     window1.title("EXIT")
     window1.geometry("500x200")
     window1.minsize(480, 360)

     window1.config(background='')
     Label_title = Label (window1, text="Voulez-vous quitter ?", font=("Courrier", 40), bg='white', fg='black')
     Label_title.pack(side=TOP, expand=YES)

     accept_button = Button(window1, text="Oui", font=("Courrier", 20), bg='white', fg='Black',command=exitall)
     accept_button.pack(side=LEFT,pady=25,expand=YES)

     refuse_button = Button(window1, text="Non", font=("Courrier", 20), bg='white', fg='Black',command=window1.destroy)
     refuse_button.pack(side=RIGHT,pady=25,expand=YES)

     window1.mainloop()
  elif password in crash_password :
    exit()
  else:
    print("Refusé !!!")
    error_password = error_password - 1
    
  if error_password == 0 :
    print("Vous avez raté trop de fois votre mot de passe pour recommencer relancez le terminal.")
    exit()
   
#fais une fenettre qui demande si oui ou non vous voulez quitter le terminal
def task_exit():
 window1 = Tk()
 frame = Frame(window1, bg='blue', bd=2, relief=SUNKEN)

 window1.title("EXIT")
 window1.geometry("500x200")
 window1.minsize(480, 360)

 window1.config(background='')
 Label_title = Label (window1, text="Voulez-vous quitter ?", font=("Courrier", 40), bg='white', fg='black')
 Label_title.pack(side=TOP, expand=YES)

 accept_button = Button(window1, text="Oui", font=("Courrier", 20), bg='white', fg='Black',command=exitall)
 accept_button.pack(side=LEFT,pady=25,expand=YES)

 refuse_button = Button(window1, text="Non", font=("Courrier", 20), bg='white', fg='Black',command=window1.destroy)
 refuse_button.pack(side=RIGHT,pady=25,expand=YES)

 window1.mainloop()


#le help
def task_help():
     print("\
       ")
     print("/====================================================================\\")
     time.sleep(0.5)
     print("|               LISTE DES COMMANDES DISPONIBLES                      |")
     time.sleep(0.5)
     print("|help    : affiche les commandes disponibles                         |") 
     time.sleep(0.5)
     print("|?       : affiche les commandes disponibles                         |")
     time.sleep(0.5)
     print("|quit    : affiche une fenettre d'exit                               |")
     time.sleep(0.5)
     print("|exit    : affiche une fenettre d'exit                               |")
     time.sleep(0.5)
     print("|site    : affiche le site et le discord                             |")
     time.sleep(0.5)
     print("|name    : choisis un nouveau nom pour le terminal                   |")
     time.sleep(0.5)
     print("|lock    : verrouille le terminal code a refaire                     |")
     time.sleep(0.5)
     print("|info    : affiche les infos de la maj                               |")
     time.sleep(0.5)
     print("|pseudo1 : change le pseudo de player1 à refaire à chaque redemarrage|")
     time.sleep(0.5)
     print("|pseudo2 : change le pseudo de player2 à refaire à chaque redemarrage|")
     time.sleep(0.5)
     print("|dessin  : dessinne un petit personnage sympatique en ascii art      |")
     time.sleep(0.5)
     print("|secu    : affiche si la sécuritée est optimale                      |")
     time.sleep(0.5)
     print("|rep     : affiche les mots de passes                                |")
     time.sleep(0.5)
     print("\\====================================================================/")



#le name qui ne marche pas encore
def task_name():
  global terminal_name
  terminal_name = input("Remplacer {} par : ".format(terminal_name))


#le site et le serveur
def task_sites():
     windowsites = Tk()
     frame = Frame(windowsites, bg='blue', bd=2, relief=SUNKEN)

     windowsites.title("Sites")
     windowsites.geometry("1700x1000")
     windowsites.minsize(480, 360)

     windowsites.config(background='')
     Label_title = Label (windowsites, text="Voila le site pour le code minecraft et roblox et le discord.", font=("Courrier", 40), bg='white', fg='black')
     Label_title.pack(side=TOP, expand=YES)

     site_button = Button(windowsites, text="Site", font=("Courrier", 20), bg='white', fg='Black',command=site)
     site_button.pack(side=LEFT,pady=25,expand=YES)

     discord_button = Button(windowsites, text="Discord", font=("Courrier", 20), bg='white', fg='Black',command=discord)
     discord_button.pack(side=RIGHT,pady=25,expand=YES)

     quit_button = Button(windowsites, text="Exit", font=("Courrier", 20), bg='white', fg='Black',command=task_exit)

     windowsites.mainloop()


#pour une commande inconue
def task_unknown():
    print("Commande inconnue.")


#le lock pour refaire le mot de passe
def task_lock():
  password_ok2 = False
  while not password_ok2 :
    password2 = input("Mot de passe : ")
    time.sleep(0.5)
    if password2 in good_password1 :
      print("Accépté : {}.".format(player1))
      password_ok2 = True
    elif password2 in good_password2 :
      print("Accépté : {}.".format(player2))
      password_ok2 = True
    elif password2 in good_password4 :
      print("\
      ")
      print("1.{}".format(good_passwords1))
      time.sleep(0.5)
      print("2.{}".format(good_passwords2))
      time.sleep(0.5)
      print("3.(admin) {}".format(good_passwords3))
      time.sleep(0.5)
      print("Si vous mettez le numéro du mot de passe cela marcheras également sauf le mot de passe admin.")
      print("\
      ")
    elif password2 in exit_password :
     window1 = Tk()
     frame = Frame(window1, bg='blue', bd=2, relief=SUNKEN)

     window1.title("EXIT")
     window1.geometry("500x200")
     window1.minsize(480, 360)

     window1.config(background='')
     Label_title = Label (window1, text="Voulez-vous quitter ?", font=("Courrier", 40), bg='white', fg='black')
     Label_title.pack(side=TOP, expand=YES)

     accept_button = Button(window1, text="Oui", font=("Courrier", 20), bg='white', fg='Black',command=exitall)
     accept_button.pack(side=LEFT,pady=25,expand=YES)

     refuse_button = Button(window1, text="Non", font=("Courrier", 20), bg='white', fg='Black',command=window1.destroy)
     refuse_button.pack(side=RIGHT,pady=25,expand=YES)

     window1.mainloop()

    elif password2 in crash_password :
      exit()
    else :
      print("Refusé")


#les mises à jours
def task_update() :
  print("\
    ")
  print("                              Infos de la V1.11")
  time.sleep(0.5)
  print("\
     ")
  print("Sécuritée augmenté (pour le terminal seulement). :) Et une fenettre pour site et discord.")



#pour changer le pseudo1
def task_pseudo1():
  global player1
  player1 = input("Choisis un nouveau pseudo pour player1 : ")


#pour changer le pseudo2
def task_pseudo2():
  global player2
  player2 = input("Choisis un nouveau pseudo pour player2 : ")


#le dessin du personnage
def task_dessin() :
 print("\
")
 print("      ___")
 time.sleep(0.5)
 print("     /I I\\")
 time.sleep(0.5)
 print("    |  d  | ")
 time.sleep(0.5)
 print("     \_=_/")
 time.sleep(0.5)
 print("     _| |_")
 time.sleep(0.5)
 print("    | | | |")
 time.sleep(0.5)
 print("    | | | |")
 time.sleep(0.5)
 print("      | |")
 time.sleep(0.5)
 print("     _| |_")


def task_admin_password(): #en création
     password_ok3 = False
     while not password_ok3 :
      password = input("Mot de passe : ")
      time.sleep(0.5)
      if password in good_password3 :
        print("Accépté en tant que : Administrateur.")
        password_ok3 = True
        admin = "oui"
      elif password in exit_password :
        print("Tu n'es pas administrateur.")
        password_ok3 = True
        admin = "non"
      else :
       print("Refusé")

#Easter egg pour les chercheurs
def task_vac():
  print("\
    ")
  print("Vive")
  time.sleep(0.5)
  print("Les")
  time.sleep(0.5)
  print("Vacances")
  time.sleep(0.5)
  print("!!!")
  time.sleep(0.5)
  print("\
    ")


#vive la secu
def secu_task():
  print("Vérification : 0%")
  time.sleep(0.3)
  print("Vérification : 10%")
  time.sleep(0.3)
  print("Vérification : 20%")
  time.sleep(0.3)
  print("Vérification : 30%")
  time.sleep(0.3)
  print("Vérification : 40%")
  time.sleep(0.3)
  print("Vérification : 50%")
  time.sleep(0.3)
  print("Vérification : 60%")
  time.sleep(0.3)
  print("Vérification : 70%")
  time.sleep(0.3)
  print("Vérification : 80%")
  time.sleep(0.3)
  print("Vérification : 90%")
  time.sleep(0.3)
  print("Vérification : 100%")
  time.sleep(0.3)
  print("La sécurité du terminal et de la machine est optimale.")

#repertoire des mots de passes
def rep_task():
  print("\
    ")
  print("1.{}".format(good_passwords1))
  time.sleep(0.5)
  print("2.{}".format(good_passwords2))
  time.sleep(0.5)
  print("3.(admin) {}".format(good_passwords3))
  print("\
    ")

def crash_task():
  exit()


#le help pour la machine
dico_task_no_admin = {
     'help'    : task_help,
     '?'       : task_help,
     'quit'    : task_exit,
     'exit'    : task_exit,
     'site'    : task_sites,
     'lock'    : task_lock,
     'info'    : task_update,
     'pseudo1' : task_pseudo1,
     'pseudo2' : task_pseudo2,
     'pseudo 1': task_pseudo1,
     'pseudo 2': task_pseudo2,
     'dessin'  : task_dessin,
     'admin'   : task_admin_password,
     'name'    : task_name,
     'vac'     : task_vac,
     'secu'    : secu_task,
     'rep'     : rep_task,
     'crash'   : crash_task,
     'stop'    : crash_task,
     }

#en création car le help de la machine lorsque admin : on
dico_task_admin = {
     'help'    : task_help,
     '?'       : task_help,
     'quit'    : task_exit,
     'exit'    : task_exit,
     'site'    : task_sites,
     'lock'    : task_lock,
     'info'    : task_update,
     'pseudo1' : task_pseudo1,
     'pseudo2' : task_pseudo2,
     'pseudo 1': task_pseudo1,
     'pseudo 2': task_pseudo2,
     'dessin'  : task_dessin,
     'admin'   : task_admin_password,
     'name'    : task_name,
}


#pour le terminal
while terminal_launched :
  #en création pour monde admin : on ou : off
 while admin == "oui" :
   user_admin_command = input(f"[admin]> ")
   dico_task_admin.get(user_command, task_unknown)()
 while admin == "non" :
   user_command = input(f"[{terminal_name}]> ")
   dico_task_no_admin.get(user_command, task_unknown)()

#la suite bientôt dans la V1.12
